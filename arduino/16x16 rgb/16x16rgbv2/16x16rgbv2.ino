#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>

#ifndef PSTR
 #define PSTR // Make Arduino Due happy
#endif

#define PIN 6

Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(16, 16, PIN,
  NEO_MATRIX_TOP     + NEO_MATRIX_LEFT +
  NEO_MATRIX_COLUMNS + NEO_MATRIX_ZIGZAG,
  NEO_GRB            + NEO_KHZ800);

uint16_t pacman1[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38017, 65508, 65508, 65508, 38017, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 38017, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38017, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38017, 65508, 65508, 65508, 38017, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
//uint16_t pacman2[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38017, 65508, 65508, 65508, 38017, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 38017, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 38017, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 38017, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 38017, 0, 0, 0, 0, 0, 0, 0, 0, 38017, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 38017, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 65508, 65508, 65508, 65508, 65508, 65508, 65508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38017, 65508, 65508, 65508, 38017, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

int spriteNum = 1;

void setup() {
  matrix.begin();
  matrix.setBrightness(40);
}

void loop() {
  matrix.clear();
  sprite(pacman1);
  matrix.show();
  delay(200);
//  matrix.clear();
//  sprite(pacman2);
//  matrix.show();
//  delay(200);
}

void sprite(uint16_t sp[]){
  for (uint16_t i=0; i<=15; i++) {
    for (uint16_t j=0; j<=15; j++) {
      matrix.drawPixel(j,i,uint16_t(sp[i*16+j]));
    }
  }
}
