#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>

#ifndef PSTR
 #define PSTR // Make Arduino Due happy
#endif

#define PIN 6

Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(16, 16, PIN,
  NEO_MATRIX_TOP     + NEO_MATRIX_LEFT +
  NEO_MATRIX_COLUMNS + NEO_MATRIX_ZIGZAG,
  NEO_GRB            + NEO_KHZ800);

const uint16_t colores[] = {
  matrix.Color(0, 0, 0), // negro
  matrix.Color(255, 255, 255), // blanco
  matrix.Color(255, 255, 33), // amarillo 
  matrix.Color(148, 148, 0), // amarillo oscuro
  matrix.Color(0, 0, 255) };

uint8_t pacman1[] = {
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,3,2,2,2,3,0,0,0,0,0,0,
  0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,
  0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,
  0,0,3,2,2,2,2,2,2,0,0,0,0,0,0,0,
  0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,
  0,0,2,2,2,2,2,0,0,0,0,0,0,0,0,0,
  0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,
  0,0,3,2,2,2,2,2,2,0,0,0,0,0,0,0,
  0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,
  0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,
  0,0,0,0,0,3,2,2,2,3,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  };
uint8_t pacman2[] = {
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,3,2,2,2,3,0,0,0,0,0,0,
  0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,
  0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,
  0,0,3,2,2,2,2,2,2,2,2,2,3,0,0,0,
  0,0,2,2,2,2,2,2,2,3,0,0,0,0,0,0,
  0,0,2,2,2,2,2,0,0,0,0,0,0,0,0,0,
  0,0,2,2,2,2,2,2,2,3,0,0,0,0,0,0,
  0,0,3,2,2,2,2,2,2,2,2,2,3,0,0,0,
  0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,
  0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,
  0,0,0,0,0,3,2,2,2,3,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  };
uint8_t pacman3[] = {
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,3,2,2,2,3,0,0,0,0,0,0,
  0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,
  0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,
  0,0,3,2,2,2,2,2,2,2,2,2,3,0,0,0,
  0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,
  0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,
  0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,
  0,0,3,2,2,2,2,2,2,2,2,2,3,0,0,0,
  0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,
  0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,
  0,0,0,0,0,3,2,2,2,3,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  };

uint8_t spriteNum = 1;
uint16_t fps = 1000/10;

void setup() {
  matrix.begin();
  matrix.setBrightness(40);
}

void loop() {
  matrix.clear();
  sprite(pacman1);
  matrix.show();
  delay(fps);
  matrix.clear();
  sprite(pacman2);
  matrix.show();
  delay(fps);
  matrix.clear();
  sprite(pacman3);
  matrix.show();
  delay(fps);
}

void sprite(uint8_t sp[]){
  for (uint16_t i=0; i<=15; i++) {
    for (uint16_t j=0; j<=15; j++) {
      matrix.drawPixel(j,i,colores[sp[i*16+j]]);
    }
  }
}
